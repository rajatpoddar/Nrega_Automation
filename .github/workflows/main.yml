name: Build All Installers

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
      changelog: ${{ steps.get_changelog.outputs.changelog }}
    steps:
    - uses: actions/checkout@v4

    - id: get_version
      run: |
        VERSION=$(jq -r '.latest_version' version.json)
        echo "version=$VERSION" >> "$GITHUB_OUTPUT"

    - id: get_changelog
      run: |
        VERSION=$(jq -r '.latest_version' version.json)
        NOTES=$(jq -r --arg ver "$VERSION" '.[$ver] | join("\n- ")' changelog.json)
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        echo "- $NOTES" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

  build-windows:
    needs: prepare
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Set up .env from secrets
      run: echo "SENTRY_DSN=${{ secrets.SENTRY_DSN }}" > .env

    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build EXE
      shell: cmd
      run: >
        pyinstaller --noconfirm --windowed
        --icon=assets/app_icon.ico
        --add-data="logo.png;."
        --add-data="payment_qr.png;."
        --add-data="theme.json;."
        --add-data="changelog.json;."
        --add-data="assets;assets"
        --add-data=".env;."
        --add-data="jobcard.jpeg;."
        --collect-data fpdf
        main_app.py

    - name: Install Inno Setup
      run: choco install innosetup -y

    - name: Create installer using Inno Setup
      run: |
        $version = "${{ needs.prepare.outputs.version }}"
        iscc inno_setup.iss /DMyAppVersion=$version
      shell: pwsh



    - name: Upload installer artifact
      uses: actions/upload-artifact@v4
      with:
        name: NREGABot-windows-installer
        path: dist/NREGABot-v${{ needs.prepare.outputs.version }}-Setup.exe

  build-macos:
    needs: prepare
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up .env from secrets
      run: echo "SENTRY_DSN=${{ secrets.SENTRY_DSN }}" > .env

    - name: Install tools
      run: |
        brew install create-dmg
        python3 -m venv venv
        source venv/bin/activate
        pip install --break-system-packages -r requirements.txt
        pip install --break-system-packages pyinstaller

    - name: Make executable
      run: chmod +x build_macos.sh

    - name: Build DMG
      run: ./build_macos.sh

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: NREGABot-macos
        path: dist/NREGABot-v${{ needs.prepare.outputs.version }}-macOS.dmg

  build-linux:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up .env from secrets
      run: echo "SENTRY_DSN=${{ secrets.SENTRY_DSN }}" > .env

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libfuse2
        python3 -m venv venv
        source venv/bin/activate
        pip install --break-system-packages -r requirements.txt
        pip install --break-system-packages pyinstaller

    - name: Build Linux App
      run: |
        source venv/bin/activate
        pyinstaller \
          --noconfirm \
          --windowed \
          --name "NREGABot" \
          --add-data="logo.png:." \
          --add-data="payment_qr.png:." \
          --add-data="theme.json:." \
          --add-data="changelog.json:." \
          --add-data="assets:assets" \
          --add-data=".env:." \
          --add-data="jobcard.jpeg:." \
          --collect-data fpdf \
          main_app.py

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: NREGABot-linux
        path: dist/NREGABot

  release:
    needs: [build-windows, build-macos, build-linux, prepare]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Publish Release
      uses: softprops/action-gh-release@v2
      with:
        name: NREGABot v${{ needs.prepare.outputs.version }}
        tag_name: v${{ needs.prepare.outputs.version }}
        body: ${{ needs.prepare.outputs.changelog }}
        files: |
          ./artifacts/NREGABot-windows-installer/*.exe
          ./artifacts/NREGABot-macos/*.dmg
          ./artifacts/NREGABot-linux/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
